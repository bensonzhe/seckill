在听讲解前未想到的设计缺点：
1、秒杀接口不能暴露，需要加密
2、秒杀有时间段限制，不能对库存1一下的进行update
3、测试很重要，需要注意测试细节，比如允许的异常出现要catch，测试的完整性


学习到的新知识点：
一、数据库方面
1、创建表之类的sql语句以及默认不从1开始自增；
2、了解支持事物的搜索引擎；
3、用户手机号可以设置为bigint类型，而不是varchar；
4、表示状态的数字类型可以设置为TINYINT，是数据库最小的字段；
5、show create table XXXXX\G   查看建表语句
6、通过控制台连接mysql数据库：mysql -uroot -p

二、Dao
1、尽量将sql写在xml中，使用mapper自动实现dao接口；
2、ingore排除主键冲突报的错，以便更好的逻辑设计；
3、采用列别名映射类中的类；
4、mybatis的@Param注解；
5、classpath在maven中表示java目录和resources目录；
6、在property文件中，出现了username，password无法识别的问题，换成name、pwd等即可运行，
   猜想是关键字冲突，需要注意；
7、不要夹杂逻辑程序；
8、注意mysql如果有时间格式，需要小心是不是按照当前时间更新；

三、Service
1、dto的使用技巧；
2、异常的使用；
3、数据字典尽量使用枚举；
4、事务方面：建议采用@Transactional方式；

四、Web
1、restful风格：
get:查询
post:修改/新增
put:新增
delete:删除
※post与put区别不大，可用幂等性来区分，post操作属非幂等，put幂等操作
※URL设计：/模块/资源/{标示id}/集合... eg: /user/{uid}/friends

五、前台
1、jsp页面等的共同抽取；
2、可以在${}此类表达中，直接将date类型转换为毫秒，方便js使用；
3、学习到了很多新东西，如：js代码风格、bootstrap、cdn代码库、
jquery-cookie、jquery-countDown等等，同时也感受到了自己知识的匮乏，
对js有了不一样的认识，也产生了浓厚的兴趣，预计会在今后抽出一段时间专门
学习一下js；

六、项目优化
1、CDN的使用，适合静态资源，命中CDN后不需要访问后端服务器，访问一次内存大约10ns，即1s可以处理约10亿次请求；
2、适合服务器的缓存：redis，约10W/秒；
3、

